@using DotNetEd.CoreAdmin.ViewModels.Device
@using DotNetEd.CoreAdmin

@model DeviceToCreate

@{
    ViewData["Page_Title"] = "Добавление устройства";
    Layout = "_CoreAdminLayout";
}

<link type="text/css" href="~/css/mainpage.css" rel="stylesheet" />
<link type="text/css" href="~/css/basicstyle.css" rel="stylesheet" />

<h1 class="display-4">Добавление устройства</h1>


@using (Html.BeginForm("CreatePost", "DevicePage", FormMethod.Post, new { enctype = "multipart/form-data", @class = "add-form" }))
{
    <div class="form-row">
        <div class="row-name">
            <label>Название</label>
        </div>
        <br />
        <input type="text" class="field" asp-for="Name" name="Name"/>
        <br />
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Диагональ</label>
        </div>
        <br />
        <input type="text" class="field" asp-for="Diagonal" name="Diagonal" />
        <br />
        @Html.ValidationMessageFor(model => model.Diagonal, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Разрешение</label>
        </div>
        <br />
        <div class="resolution">
            <input type="text" class="field hight" asp-for="Hight" name="Hight" placeholder="Высота" />
            <input type="text" class="field width" asp-for="Width" name="Width" placeholder="Ширина" />
            @Html.ValidationMessageFor(model => model.Hight, "", new { @class = "text-danger resolution-text" })
            @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger resolution-text" })
        </div>
        <br />
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Класс</label>
        </div>
        <br />
        @Html.DropDownListFor(model => model.ClassOfDevice, ViewBag.ClassOfDevice as SelectList, new { @class = "field" } )
        <br />
        @Html.ValidationMessageFor(model => model.ClassOfDevice, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Ос</label>
        </div>
        <br />
        @Html.DropDownListFor(model => model.OsId, ViewBag.OsIs as SelectList, new { @class = "field"})
        <br />
        @Html.ValidationMessageFor(model => model.OsId, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Департамент</label>
        </div>
        <br />
        @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DepartmentId as SelectList, new { @class = "field"})
        <br />
        @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Тип</label>
        </div>
        <br />
        @Html.DropDownListFor(model => model.TypeId, ViewBag.TypeId as SelectList, new { @class = "field"})
        <br />
        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <input type="file" name="Image" asp-for="Image" accept="image/*" data-allowed-file-extensions='["jpg", "png" , "jpeg"]' />
        <br />
        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row submit-panel">
        <button type="submit" class="btn btn-primary submit-button">Create</button>
        <button type="submit" class="btn btn-primary submit-button" onclick="setStay()">Create and stay</button>
        @Html.ActionLink("No, go back", "Index", new { @class = "back-link" })
    </div>
    <input type="hidden" value="false" name="Stay" id="stay" />
}


<script src="~/js/site.js"></script>