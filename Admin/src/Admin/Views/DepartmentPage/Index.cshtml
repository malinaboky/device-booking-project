@using Admin.ViewModels.Department
@using DotNetEd.CoreAdmin.ViewModels
@using Microsoft.AspNetCore.Html
@using NonFactors.Mvc.Grid
@using System.Linq.Expressions
@using Microsoft.EntityFrameworkCore
@using System.Data

@model DepartmentsList

@{
    ViewData["Page_Title"] = "Департаменты";
    Layout = "_CoreAdminLayout";

    var dic = new Dictionary<long, long>();
    for (var i = 0; i < Model.Departments.Count(); i++)
        dic.Add(Model.Departments[i].Id, (long)i);

    var message = ViewBag.Message as string;
}

<link rel="stylesheet" href="~/css/style.css">

<div class="title">
    <h1 class="display-4">Департаменты</h1>
    @if (message != null) {
        <label id="error">@message</label>
    }
</div>

@using (Html.BeginForm("DeleteAmountPost", "DepartmentPage", FormMethod.Post, new { @class = "add-form" }))
{
    <div class="row">
        <div class="col-lg-12 my-3">
            @Html.ActionLink("Create new", "Create", "DepartmentPage", null, new { @class = "btn btn-primary"})
            <button type='submit' class='btn btn-primary'>Delete selected</button>
        </div>
    </div>
    @(Html.Grid(Model.Departments)
                    .Build((columns) =>
                    {
                        columns.Add<long>(item => item.Id)
                            .Titled(new PropertyForFiltering { Able = true, Name = "Id" });
                        columns.Add<string>(item => item.Name)
                            .Titled(new PropertyForFiltering { Able = true, Name = "Name" });
                   
                        columns.Add(item => Html.ActionLink("Edit", "Edit", new { Id = item.Id }));
                        columns.Add(item => Html.ActionLink("Delete", "DeletePost", new { Id = item.Id }));
                        columns.Add(item => Html.CheckBoxFor(y => y.Departments[(int)dic[item.Id]].Selected, new { @id = $"Selected{dic[item.Id]}", @onclick = $"turnSelectAll({dic[item.Id]})" }))
                                               .Titled(new HtmlString("<input type=\"checkbox\" id=\"SelectAll\" onclick=\"changeAll()\">"));
                    }
                )
            .Using(GridFilterMode.Header)
            .Empty("No data found")
            .Filterable()
            .Sortable()
            .Pageable()
        )
    @for (var i = 0; i < Model.Departments.Count(); i++)
    {
        @Html.HiddenFor(y => y.Departments[i].Id);
    }
}


@section Scripts
    {
    <script src="~/js/jquery-3.5.0.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
    </script>
}

