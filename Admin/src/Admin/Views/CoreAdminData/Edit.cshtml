@using DotNetEd.CoreAdmin;
@using DotNetEd.CoreAdmin.ViewModels.Device

@model DeviceToEdit

@{
    ViewData["Page_Title"] = "Редактирование устройства";
    Layout = "_CoreAdminLayout";
    SelectList osList = ViewBag.Os;
    SelectList typeList = ViewBag.Type;
    SelectList departmentList = ViewBag.Department;
}

<link type="text/css" href="~/css/mainpage.css" rel="stylesheet" />
<link type="text/css" href="~/css/basicstyle.css" rel="stylesheet" />

<h1 class="display-4">Редактирование устройства</h1>


@using (Html.BeginForm("CreatePost", "DevicePage", FormMethod.Post, new { @class = "add-form" }))
{
    <div class="form-row">
        <div class="row-name">
            <label>Название:</label>
        </div>
        <br />
        <input type="text" class="field" asp-for="Name" name="Name" value="@Model.Name"/>
        <br />
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Диагональ:</label>
        </div>
        <br />
        <input type="text" class="field" asp-for="Diagonal" name="Diagonal" value="@Model.Diagonal" />
        <br />
        @Html.ValidationMessageFor(model => model.Diagonal, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Разрешение:</label>
        </div>
        <br />
        <div class="resolution">
            <input type="text" class="field" asp-for="Hight" name="Hight" value="@Model.Hight" />
            X
            <input type="text" class="field" asp-for="Width" name="Width" value="@Model.Width"  />
        </div>
        <br />
        @Html.ValidationMessageFor(model => model.Hight, "", new { @class = "text-danger resolution-text" })
        @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger resolution-text" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Класс:</label>
        </div>
        <br />
        @Html.DropDownList("ClassOfDevice", Html.GetEnumSelectList(typeof(ClassOfDevice)), string.Empty, new { @class = "field" } )
        <br />
        @Html.ValidationMessageFor(model => model.ClassOfDevice, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Ос:</label>
        </div>
        <br />
        @Html.DropDownList("OsId", osList, new { @class = "field"})
        <br />
        @Html.ValidationMessageFor(model => model.OsId, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Департамент:</label>
        </div>
        <br />
        @Html.DropDownList("DepartmentId", departmentList, new { @class = "field"})
        <br />
        @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-row">
        <div class="row-name">
            <label>Тип:</label>
        </div>
        <br />
        @Html.DropDownList("TypeId", typeList, new { @class = "field"})
        <br />
        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
    </div>
    <br />

    <div class="row">
        <div class="col-md-12 px-4">
            <button type="submit" class="btn btn-primary">Create</button>
            @Html.ActionLink("No, go back", "Index")
        </div>
    </div>
}