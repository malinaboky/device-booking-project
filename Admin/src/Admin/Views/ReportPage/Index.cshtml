@using DotNetEd.CoreAdmin
@using DotNetEd.CoreAdmin.ViewModels
@using DotNetEd.CoreAdmin.ViewModels.Report
@using Microsoft.AspNetCore.Html
@using NonFactors.Mvc.Grid
@using System.Linq.Expressions
@using Microsoft.EntityFrameworkCore
@using System.Data

@model ReportsList

@{
    ViewData["Page_Title"] = "Репорты";
    Layout = "_CoreAdminLayout";

    var dic = new Dictionary<long, long>();
    for (var i = 0; i < Model.Reports.Count(); i++)
        dic.Add(Model.Reports[i].Id, (long)i);

    var message = ViewBag.Message as string;
}

<div class="title">
    <h1 class="display-4">Репорты</h1>
    @if (message != null) {
        <label id="error">@message</label>
    }
</div>

@using (Html.BeginForm("DeleteAmountPost", "ReportPage", FormMethod.Post, new { @class = "add-form" }))
{
    <div class="row">
        <div class="col-lg-12 my-3">
            <button type='submit' class='btn btn-primary'>Delete selected</button>
        </div>
    </div>

    @(Html.Grid(Model.Reports)
                        .Build((columns) =>
                        {
                            columns.Add<long>(item => item.UserId)
                                   .Titled(new PropertyForFiltering { Able = true, Name = "User ID" });
                            columns.Add<string>(item => item.Status)
                                   .Titled(new PropertyForFiltering { Able = true, Name = "Status" });
                            columns.Add<string>(item => item.Description)
                                   .Titled(new PropertyForFiltering { Able = true, Name = "Description" });

                            columns.Add(item => Html.ActionLink("Edit", "Edit", new { Id = item.Id }));
                            columns.Add(item => Html.ActionLink("Delete", "DeletePost", new { Id = item.Id }));
                            columns.Add(item => Html.CheckBoxFor(y => y.Reports[(int)dic[item.Id]].Selected, new { @id = $"Selected{dic[item.Id]}", @onclick = $"turnSelectAll({dic[item.Id]})" }))
                                .Titled(new HtmlString("<input type=\"checkbox\" id=\"SelectAll\" onclick=\"changeAll()\">"));
                        }
                    )
                .Using(GridFilterMode.Header)
                .Empty("No data found")
                .Filterable()
                .Sortable()
                .Pageable()
            )
    @for (var i = 0; i < Model.Reports.Count(); i++)
    {
        @Html.HiddenFor(y => y.Reports[i].Id);
    }
}

@section Scripts
    {
    <script src="~/js/jquery-3.5.0.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
    </script>
}
    <link rel="stylesheet" href="~/css/style.css">


